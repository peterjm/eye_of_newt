#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module EyeOfNewt
  class Parser < Racc::Parser


  def initialize(tokenizer, units:, ingredient: nil)
    @tokenizer = tokenizer
    @units = units
    @ingredient = ingredient || default_ingredient
    super()
  end

  def next_token
    @tokenizer.next_token
  end

  def parse
    do_parse
    @ingredient
  rescue Racc::ParseError
    raise InvalidIngredient, @tokenizer.string
  end

  def to_unit(u)
    @units[u]
  end

  def default_ingredient
    EyeOfNewt::Ingredient.new(amount: 1, unit: @units.default)
  end
##### State transition tables begin ###

racc_action_table = [
   -37,    33,    14,    17,    16,    31,    15,    11,   -37,    13,
   -37,   -37,    16,    37,    29,    14,    16,    13,    14,    15,
    20,    18,    15,    20,    24,    26,    25,    26,    35,    36,
    25,    26,    25,    26,    44,    44,    16,    47,    48,    35,
    49,    50,    26,    26,    53,    54 ]

racc_action_check = [
    11,     8,     0,     0,     0,     7,     0,     0,    11,     0,
    11,    11,     5,    18,     5,    12,     6,     5,     2,    12,
    12,     1,     2,     2,     3,    22,     3,     3,    17,    17,
    19,    19,    21,    21,    25,    26,    27,    28,    30,    33,
    35,    36,    38,    40,    45,    46 ]

racc_action_pointer = [
     0,    21,    16,    16,   nil,     8,    12,    -1,    -2,   nil,
   nil,     0,    13,   nil,   nil,   nil,   nil,    15,    13,    20,
   nil,    22,    14,   nil,   nil,    29,    30,    32,    31,   nil,
    32,   nil,   nil,    26,   nil,    37,    38,   nil,    31,   nil,
    32,   nil,   nil,   nil,   nil,    32,    39,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -43,   -43,   -43,   -12,   -13,   -19,   -43,   -23,   -24,   -26,
   -27,   -28,   -33,   -34,   -36,   -38,   -39,   -40,   -43,    -8,
   -37,   -10,   -11,    -6,   -29,   -43,   -43,   -43,   -17,   -18,
   -21,   -22,   -25,   -43,   -32,   -43,   -43,    55,    -7,    -2,
    -9,    -4,    -5,   -30,   -35,   -43,   -15,   -16,   -20,   -41,
   -42,    -1,    -3,   -31,   -14 ]

racc_goto_table = [
    23,     7,     9,     6,    22,     5,    28,    30,    27,     3,
    32,    19,    43,    45,    34,    21,    39,     8,    41,    42,
    38,     2,    40,    10,     1,   nil,   nil,   nil,    46,   nil,
   nil,   nil,   nil,   nil,   nil,    51,   nil,    52 ]

racc_goto_check = [
     5,    10,    12,     9,     4,     8,    10,    10,     9,     3,
    12,     3,    14,    14,     7,     6,     5,    11,     5,     5,
     4,     2,     4,    13,     1,   nil,   nil,   nil,    10,   nil,
   nil,   nil,   nil,   nil,   nil,     5,   nil,     5 ]

racc_goto_pointer = [
   nil,    24,    21,     9,     1,    -3,    12,     2,     5,     3,
     1,    17,     2,    23,   -13,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    12 ]

racc_reduce_table = [
  0, 0, :racc_error,
  4, 16, :_reduce_none,
  3, 16, :_reduce_none,
  4, 16, :_reduce_none,
  3, 16, :_reduce_none,
  3, 16, :_reduce_none,
  2, 16, :_reduce_none,
  3, 16, :_reduce_none,
  2, 16, :_reduce_none,
  3, 16, :_reduce_none,
  2, 16, :_reduce_none,
  2, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 18, :_reduce_13,
  4, 17, :_reduce_none,
  3, 17, :_reduce_none,
  3, 17, :_reduce_none,
  2, 17, :_reduce_none,
  2, 17, :_reduce_none,
  1, 17, :_reduce_none,
  3, 17, :_reduce_none,
  2, 17, :_reduce_none,
  2, 17, :_reduce_none,
  1, 17, :_reduce_none,
  1, 23, :_reduce_24,
  2, 23, :_reduce_25,
  1, 23, :_reduce_26,
  1, 23, :_reduce_27,
  1, 23, :_reduce_28,
  1, 21, :_reduce_29,
  2, 19, :_reduce_30,
  3, 20, :_reduce_31,
  2, 22, :_reduce_32,
  1, 22, :_reduce_none,
  1, 24, :_reduce_34,
  1, 29, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 25, :_reduce_39,
  1, 26, :_reduce_40,
  3, 27, :_reduce_41,
  3, 28, :_reduce_42 ]

racc_reduce_n = 43

racc_shift_n = 55

racc_token_table = {
  false => 0,
  :error => 1,
  :WORD => 2,
  :NUMBER => 3,
  :UNIT => 4,
  :TEXT => 5,
  :OF => 6,
  :A => 7,
  :TO_TASTE => 8,
  :UNIT_MODIFIER => 9,
  "," => 10,
  "(" => 11,
  ")" => 12,
  "/" => 13,
  "." => 14 }

racc_nt_base = 15

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "WORD",
  "NUMBER",
  "UNIT",
  "TEXT",
  "OF",
  "A",
  "TO_TASTE",
  "UNIT_MODIFIER",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\"/\"",
  "\".\"",
  "$start",
  "ingredient",
  "quantity",
  "ingredient_name",
  "style",
  "note",
  "to_taste",
  "words",
  "amount",
  "unit_modifier",
  "unit",
  "number",
  "fraction",
  "decimal",
  "text",
  "word" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

def _reduce_13(val, _values, result)
 @ingredient.name = result 
    result
end

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

def _reduce_24(val, _values, result)
 @ingredient.amount = result 
    result
end

def _reduce_25(val, _values, result)
 @ingredient.amount = val[0] + val[1] 
    result
end

def _reduce_26(val, _values, result)
 @ingredient.amount = result 
    result
end

def _reduce_27(val, _values, result)
 @ingredient.amount = result 
    result
end

def _reduce_28(val, _values, result)
 @ingredient.amount = 1 
    result
end

def _reduce_29(val, _values, result)
 @ingredient.unit = to_unit(result) 
    result
end

def _reduce_30(val, _values, result)
 @ingredient.style = val[1] 
    result
end

def _reduce_31(val, _values, result)
 @ingredient.note = val[1] 
    result
end

def _reduce_32(val, _values, result)
 result = val.join(' ') 
    result
end

# reduce 33 omitted

def _reduce_34(val, _values, result)
 @ingredient.unit_modifier = val[0] 
    result
end

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
 @ingredient.unit = to_unit(result) 
    result
end

def _reduce_40(val, _values, result)
 result = val[0].to_i 
    result
end

def _reduce_41(val, _values, result)
 result = val[0].to_f / val[2].to_f 
    result
end

def _reduce_42(val, _values, result)
 result = val.join.to_f 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module EyeOfNewt
