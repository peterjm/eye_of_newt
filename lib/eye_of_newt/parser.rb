#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module EyeOfNewt
  class Parser < Racc::Parser


  def initialize(tokenizer, units:, ingredient: nil)
    @tokenizer = tokenizer
    @units = units
    @ingredient = ingredient || default_ingredient
    super()
  end

  def next_token
    @tokenizer.next_token
  end

  def parse
    do_parse
    @ingredient
  rescue Racc::ParseError
    raise InvalidIngredient, @tokenizer.string
  end

  def to_unit(u)
    @units[u]
  end

  def default_ingredient
    EyeOfNewt::Ingredient.new(amount: 1, unit: @units.default)
  end
##### State transition tables begin ###

racc_action_table = [
   -43,   -40,    16,    19,    18,    39,    17,    10,   -43,    15,
    16,    43,   -43,   -43,    17,    22,    16,    23,    36,    37,
    17,    22,    18,    23,    32,    27,    18,    33,    53,    28,
    29,    28,    29,    41,    42,    28,    29,    35,    18,    29,
    50,    50,    20,    54,    55,    19,    19,    41,    58,    59,
    29,    29,    62,    63 ]

racc_action_check = [
    10,    15,     0,     0,     0,    11,     0,     0,    10,     0,
     2,    20,    10,    10,     2,     2,    14,     2,     8,     8,
    14,    14,     5,    14,     5,     3,    30,     5,    30,     3,
     3,    21,    21,    19,    19,    24,    24,     7,     6,    25,
    28,    29,     1,    31,    34,    36,    37,    39,    41,    42,
    44,    46,    51,    52 ]

racc_action_pointer = [
     0,    42,     8,    17,   nil,    18,    34,    31,     8,   nil,
     0,     2,   nil,   nil,    14,    -3,   nil,   nil,   nil,    18,
    11,    19,   nil,   nil,    23,    26,   nil,   nil,    35,    36,
    22,    37,   nil,   nil,    38,   nil,    42,    43,   nil,    32,
   nil,    45,    46,   nil,    37,   nil,    38,   nil,   nil,   nil,
   nil,    38,    47,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_action_default = [
   -50,   -50,   -50,   -12,   -13,   -21,   -50,   -25,   -26,   -27,
   -28,   -31,   -33,   -34,   -39,   -45,   -42,   -44,   -46,   -47,
   -50,    -8,   -43,   -45,   -10,   -11,    -6,   -35,   -50,   -50,
   -19,   -17,   -20,   -40,   -23,   -24,   -50,   -50,   -32,   -50,
   -38,   -50,   -50,    64,    -7,    -2,    -9,    -4,    -5,   -36,
   -41,   -50,   -15,   -18,   -16,   -22,   -29,   -30,   -48,   -49,
    -1,    -3,   -37,   -14 ]

racc_goto_table = [
    26,     8,     7,     5,     6,    25,    40,    31,    34,    30,
     3,    24,    21,    49,    51,     2,     9,    38,    45,     1,
   nil,    47,    48,    44,   nil,   nil,    46,   nil,   nil,   nil,
   nil,   nil,    52,   nil,   nil,   nil,   nil,    56,    57,   nil,
   nil,    60,   nil,    61 ]

racc_goto_check = [
     5,    11,    10,     8,     9,     4,     7,    10,    10,     9,
     3,     6,     3,    16,    16,     2,    12,    14,     5,     1,
   nil,     5,     5,     4,   nil,   nil,     4,   nil,   nil,   nil,
   nil,   nil,    10,   nil,   nil,   nil,   nil,    11,    11,   nil,
   nil,     5,   nil,     5 ]

racc_goto_pointer = [
   nil,    19,    15,    10,     2,    -3,     8,    -8,     3,     4,
     2,     1,    16,   nil,     6,   nil,   -15,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,
   nil,   nil,   nil,    11,    12,    13,   nil,    14 ]

racc_reduce_table = [
  0, 0, :racc_error,
  4, 18, :_reduce_none,
  3, 18, :_reduce_none,
  4, 18, :_reduce_none,
  3, 18, :_reduce_none,
  3, 18, :_reduce_none,
  2, 18, :_reduce_none,
  3, 18, :_reduce_none,
  2, 18, :_reduce_none,
  3, 18, :_reduce_none,
  2, 18, :_reduce_none,
  2, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 20, :_reduce_13,
  4, 19, :_reduce_none,
  3, 19, :_reduce_none,
  3, 19, :_reduce_none,
  2, 19, :_reduce_none,
  3, 19, :_reduce_none,
  2, 19, :_reduce_none,
  2, 19, :_reduce_none,
  1, 19, :_reduce_none,
  3, 19, :_reduce_none,
  2, 19, :_reduce_none,
  2, 19, :_reduce_none,
  1, 19, :_reduce_none,
  1, 25, :_reduce_26,
  1, 25, :_reduce_27,
  1, 25, :_reduce_28,
  3, 29, :_reduce_29,
  3, 29, :_reduce_30,
  1, 28, :_reduce_none,
  2, 28, :_reduce_32,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 23, :_reduce_35,
  2, 21, :_reduce_36,
  3, 22, :_reduce_37,
  2, 24, :_reduce_38,
  1, 24, :_reduce_none,
  1, 26, :_reduce_40,
  1, 33, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 27, :_reduce_46,
  1, 30, :_reduce_47,
  3, 31, :_reduce_48,
  3, 32, :_reduce_49 ]

racc_reduce_n = 50

racc_shift_n = 64

racc_token_table = {
  false => 0,
  :error => 1,
  :WORD => 2,
  :NUMBER => 3,
  :UNIT => 4,
  :TEXT => 5,
  :OF => 6,
  :A => 7,
  :TO_TASTE => 8,
  :UNIT_MODIFIER => 9,
  "-" => 10,
  "\u{2013}" => 11,
  "," => 12,
  "(" => 13,
  ")" => 14,
  "/" => 15,
  "." => 16 }

racc_nt_base = 17

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "WORD",
  "NUMBER",
  "UNIT",
  "TEXT",
  "OF",
  "A",
  "TO_TASTE",
  "UNIT_MODIFIER",
  "\"-\"",
  "\"\u{2013}\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\"/\"",
  "\".\"",
  "$start",
  "ingredient",
  "quantity",
  "ingredient_name",
  "style",
  "note",
  "to_taste",
  "words",
  "amount",
  "unit_modifier",
  "unit",
  "numerical_amount",
  "numerical_range",
  "number",
  "fraction",
  "decimal",
  "text",
  "word" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

def _reduce_13(val, _values, result)
 @ingredient.name = result 
    result
end

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

def _reduce_26(val, _values, result)
 @ingredient.amount = result 
    result
end

def _reduce_27(val, _values, result)
 @ingredient.amount = result 
    result
end

def _reduce_28(val, _values, result)
 @ingredient.amount = 1 
    result
end

def _reduce_29(val, _values, result)
 result = [val[0], val[2]] 
    result
end

def _reduce_30(val, _values, result)
 result = [val[0], val[2]] 
    result
end

# reduce 31 omitted

def _reduce_32(val, _values, result)
 result = val[0] + val[1] 
    result
end

# reduce 33 omitted

# reduce 34 omitted

def _reduce_35(val, _values, result)
 @ingredient.unit = to_unit(result) 
    result
end

def _reduce_36(val, _values, result)
 @ingredient.style = val[1] 
    result
end

def _reduce_37(val, _values, result)
 @ingredient.note = val[1] 
    result
end

def _reduce_38(val, _values, result)
 result = val.join(' ') 
    result
end

# reduce 39 omitted

def _reduce_40(val, _values, result)
 @ingredient.unit_modifier = val[0] 
    result
end

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
 @ingredient.unit = to_unit(result) 
    result
end

def _reduce_47(val, _values, result)
 result = val[0].to_i 
    result
end

def _reduce_48(val, _values, result)
 result = val[0].to_f / val[2].to_f 
    result
end

def _reduce_49(val, _values, result)
 result = val.join.to_f 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module EyeOfNewt
