#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module EyeOfNewt
  class Parser < Racc::Parser


  def initialize(tokenizer, units:, ingredient: nil)
    @tokenizer = tokenizer
    @units = units
    @ingredient = ingredient || default_ingredient
    super()
  end

  def next_token
    @tokenizer.next_token
  end

  def parse
    do_parse
    @ingredient
  rescue Racc::ParseError
    raise InvalidIngredient, @tokenizer.string
  end

  def to_unit(u)
    @units[u]
  end

  def default_ingredient
    EyeOfNewt::Ingredient.new(amount: 1, unit: @units.default)
  end
##### State transition tables begin ###

racc_action_table = [
   -23,    11,    13,    19,    20,    12,     9,    11,   -23,   -23,
    11,    12,    16,    25,    12,    16,    23,    14,    22,    27,
    28,    29,    20,    20,    33,    34,    27,    35,    36 ]

racc_action_check = [
     9,     0,     0,     3,     3,     0,     0,     2,     9,     9,
    10,     2,     2,     6,    10,    10,     5,     1,     5,    13,
    13,    14,    15,    17,    20,    21,    25,    27,    28 ]

racc_action_pointer = [
    -1,    17,     5,    -5,   nil,    12,    10,   nil,   nil,     0,
     8,   nil,   nil,     9,    21,    13,   nil,    14,   nil,   nil,
    19,    19,   nil,   nil,   nil,    16,   nil,    24,    25,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -29,   -29,   -29,    -6,    -7,   -11,   -12,   -14,   -15,   -16,
   -20,   -22,   -24,   -26,   -29,    -2,   -23,    -4,    -5,   -17,
   -29,    -9,   -10,   -25,   -13,   -29,   -19,   -29,   -29,    37,
    -1,    -3,   -18,   -21,    -8,   -27,   -28 ]

racc_goto_table = [
    18,     7,     3,     5,    15,    17,    26,    24,     1,    21,
     6,     2,    30,     8,    31,    32 ]

racc_goto_check = [
     4,    10,     3,     7,     3,     5,     6,    10,     1,     8,
     9,     2,     4,    11,     4,    12 ]

racc_goto_pointer = [
   nil,     8,    11,     2,    -3,     2,    -4,     3,     4,    10,
     1,    13,    -5,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,    10 ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 13, :_reduce_none,
  2, 13, :_reduce_none,
  3, 13, :_reduce_none,
  2, 13, :_reduce_none,
  2, 13, :_reduce_none,
  1, 13, :_reduce_none,
  1, 15, :_reduce_7,
  3, 14, :_reduce_none,
  2, 14, :_reduce_none,
  2, 14, :_reduce_none,
  1, 14, :_reduce_none,
  1, 19, :_reduce_12,
  2, 19, :_reduce_13,
  1, 19, :_reduce_14,
  1, 19, :_reduce_15,
  1, 19, :_reduce_16,
  1, 17, :_reduce_17,
  2, 16, :_reduce_18,
  2, 18, :_reduce_19,
  1, 18, :_reduce_none,
  1, 24, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 20, :_reduce_25,
  1, 21, :_reduce_26,
  3, 22, :_reduce_27,
  3, 23, :_reduce_28 ]

racc_reduce_n = 29

racc_shift_n = 37

racc_token_table = {
  false => 0,
  :error => 1,
  :WORD => 2,
  :NUMBER => 3,
  :UNIT => 4,
  :TEXT => 5,
  :OF => 6,
  :A => 7,
  :TO_TASTE => 8,
  "," => 9,
  "/" => 10,
  "." => 11 }

racc_nt_base = 12

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "WORD",
  "NUMBER",
  "UNIT",
  "TEXT",
  "OF",
  "A",
  "TO_TASTE",
  "\",\"",
  "\"/\"",
  "\".\"",
  "$start",
  "ingredient",
  "quantity",
  "ingredient_name",
  "style",
  "to_taste",
  "words",
  "amount",
  "unit",
  "number",
  "fraction",
  "decimal",
  "text",
  "word" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

def _reduce_7(val, _values, result)
 @ingredient.name = result 
    result
end

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

def _reduce_12(val, _values, result)
 @ingredient.amount = result 
    result
end

def _reduce_13(val, _values, result)
 @ingredient.amount = val[0] + val[1] 
    result
end

def _reduce_14(val, _values, result)
 @ingredient.amount = result 
    result
end

def _reduce_15(val, _values, result)
 @ingredient.amount = result 
    result
end

def _reduce_16(val, _values, result)
 @ingredient.amount = 1 
    result
end

def _reduce_17(val, _values, result)
 @ingredient.unit = to_unit(result) 
    result
end

def _reduce_18(val, _values, result)
 @ingredient.style = val[1] 
    result
end

def _reduce_19(val, _values, result)
 result = val.join(' ') 
    result
end

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

def _reduce_25(val, _values, result)
 @ingredient.unit = to_unit(result) 
    result
end

def _reduce_26(val, _values, result)
 result = val[0].to_i 
    result
end

def _reduce_27(val, _values, result)
 result = val[0].to_f / val[2].to_f 
    result
end

def _reduce_28(val, _values, result)
 result = val.join.to_f 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module EyeOfNewt
